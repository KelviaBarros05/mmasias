import java.util.*;

public class Ultima {

        static final int FILA = 0;
        static final int COLUMNA = 1;
        static final int MEDIO_TRANSPORTE = 2;

        static final int ON_FOOT = 0;
        static final int ON_SHIP = 1;

        static final int ARRIBA = 0;
        static final int ABAJO = 1;
        static final int IZQUIERDA = 2;
        static final int DERECHA = 3;
        static final int SALIR = 4;
        static final int CAMBIA_VISUALIZACION = 5;
        static final int CAMBIA_TRANSPORTE = 6;
        static final int NADA = 999;

        static final int VISUALIZACION_NORMAL = 0;
        static final int VISUALIZACION_SIN_COLOR = 1;
        static final int VISUALIZACION_RAW = 2;
        static final int VISUALIZACION_COLISIONES = 3;

        static final int[][] MOVIMIENTO = {
                        { -1, 0 },
                        { 1, 0 },
                        { 0, -1 },
                        { 0, 1 }
        };

        static double hora = 9.0;
        static int alcanceVision;
        static int viewPort;
        static int modoVisualizacion = VISUALIZACION_NORMAL;

        static int minFila, minColumna, maxFila, maxColumna;

        static boolean jugando = true;

        public static void main(String[] args) {

                final int[][] ULTIMA = {
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 6, 2, 3, 3, 3, 3, 2, 8, 3, 3, 3,
                                                3, 3, 3, 3, 8,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 3, 3,
                                                3, 8, 8, 3, 3, 3, 3, 9,
                                                9, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 9, 9, 8, 8, 3, 3,
                                                3, 3, 3, 3, 8,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 3, 3, 3, 3, 8,
                                                8, 8, 8, 3, 3, 3, 8, 0,
                                                8, 9, 2, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 9, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 8, 8, 8, 3,
                                                3, 3, 3, 3, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 2, 2, 3, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 9, 9,
                                                8, 8, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 9, 9, 9, 9, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 8, 2,
                                                3, 3, 3, 3, 3,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 8, 8, 2, 2, 2, 2, 2, 8,
                                                8, 8, 8, 3, 3, 2, 9, 8,
                                                9, 8, 9, 9, 2, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 9, 0, 9, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 8, 8, 9, 8,
                                                3, 3, 3, 3, 3,
                                                2, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 8, 8, 2, 2, 2, 8, 8,
                                                8, 8, 8, 3, 3, 8, 8, 8,
                                                9, 9, 9, 8, 8, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 8, 9, 8,
                                                9, 3, 3, 3, 3,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 2, 2, 2, 2, 8,
                                                8, 8, 8, 3, 3, 8, 8, 9,
                                                8, 9, 8, 9, 8, 3, 2, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 8, 9, 9,
                                                8, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 0, 8, 8, 2, 2, 2, 2, 8,
                                                8, 8, 2, 3, 3, 2, 9, 9,
                                                8, 9, 8, 9, 3, 3, 9, 9, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 8, 8,
                                                2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 2, 2, 2, 2, 2, 2,
                                                8, 8, 2, 3, 3, 2, 9, 8,
                                                8, 9, 9, 3, 3, 3, 9, 3, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 8, 8, 8,
                                                2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 2, 2, 2, 2, 2, 2,
                                                8, 8, 2, 3, 3, 3, 8, 8,
                                                9, 9, 9, 3, 3, 3, 3, 3, 3, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 8, 8, 8, 8,
                                                2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 2, 3, 3, 3, 8, 8,
                                                8, 8, 9, 3, 3, 3, 3, 3, 9, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 8, 9, 8, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 2, 3, 3, 3, 2, 8,
                                                8, 8, 2, 9, 3, 3, 3, 3, 9, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 9, 9, 8, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 9, 8,
                                                9, 9, 8, 9, 3, 3, 3, 3, 9, 9, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 9,
                                                2, 2, 2, 2, 3,
                                                3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 9,
                                                9, 9, 8, 9, 3, 3, 8, 3, 3, 9, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 9, 9,
                                                2, 2, 2, 4, 3,
                                                3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                3, 3, 9, 3, 3, 3, 8, 3, 4, 9, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 2,
                                                2, 2, 2, 3, 3,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 2, 9,
                                                2, 2, 2, 3, 3,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2,
                                                2, 2, 3, 3, 9, 3, 3, 3,
                                                3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 9, 2, 2, 8, 2, 2, 2, 2, 2, 9,
                                                2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3,
                                                2, 3, 3, 3, 9, 3, 3, 3,
                                                8, 3, 3, 3, 2, 2, 2, 2, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 3, 3, 3, 2, 2, 9, 9, 9, 8, 8, 8, 2, 2, 2, 2, 2,
                                                2, 9, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3,
                                                2, 3, 3, 3, 0, 3, 3, 3,
                                                3, 8, 3, 3, 2, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 3, 3, 4, 9, 9, 8, 9, 9, 8, 2, 2, 2, 2, 2, 2,
                                                9, 9, 9, 9, 9,
                                                8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3,
                                                9, 3, 3, 3, 9, 3, 3, 3,
                                                3, 8, 8, 3, 2, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 2, 2, 2, 9, 3, 3, 3, 8, 8, 9, 8, 4, 8, 2, 2, 2, 2,
                                                8, 8, 9, 9, 8,
                                                8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3,
                                                9, 3, 3, 3, 9, 3, 3, 3,
                                                3, 3, 8, 8, 2, 2, 2, 2, 2, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 2, 2, 2, 2, 9, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                9, 9, 8, 9, 8,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 4,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 8, 3, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 2, 2, 2, 2, 9, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                9, 8, 8, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 8, 8, 3, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                9, 8, 8, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 2, 8, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 8, 2, 8, 8, 8, 2, 2, 2, 2,
                                                2, 9, 9, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 2, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 2, 8, 8, 2, 2, 2, 2,
                                                2, 2, 9, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 2, 8, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 9, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2, 2, 2, 2, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 8, 2, 2, 2, 2, 2, 3, 3, 3, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 9, 8,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2, 2, 2, 9, 8,
                                                8, 3, 3, 3, 3, 3, 8, 2,
                                                3, 3, 3, 2, 2, 2, 2, 9, 9, 3, 3, 9, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 9, 8,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8,
                                                8, 8, 3, 3, 3, 4, 8, 8,
                                                3, 3, 3, 3, 2, 2, 2, 9, 2, 3, 3, 9, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 9,
                                                8, 8, 8, 3, 2, 2, 3, 8,
                                                2, 3, 3, 3, 3, 2, 2, 9, 2, 3, 3, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3, 4, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 9,
                                                8, 8, 3, 3, 2, 2, 3, 3,
                                                2, 3, 3, 3, 3, 2, 2, 2, 2, 3, 9, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 9,
                                                8, 8, 3, 3, 2, 8, 3, 3,
                                                8, 3, 3, 3, 3, 3, 2, 9, 2, 3, 9, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 9, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 8, 9,
                                                8, 8, 3, 3, 2, 8, 3, 2,
                                                8, 3, 3, 3, 3, 3, 9, 2, 3, 3, 9, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 9, 8, 9, 8, 2, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 4,
                                                3, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 8, 8,
                                                8, 8, 2, 3, 2, 8, 8, 2,
                                                8, 3, 3, 3, 3, 3, 9, 3, 3, 3, 9, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 8, 8, 8, 8, 9, 2, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 8, 8, 8,
                                                8, 3, 3, 3, 3, 3, 2, 3, 3, 3, 2, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 8, 9, 8, 8, 9, 2, 3, 3, 3, 3, 3, 2, 8, 3, 2, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 8, 8,
                                                8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 8, 9, 8, 9, 8, 9, 2, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 8,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 8, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 8, 9, 8, 9, 8, 9, 2, 8, 3, 3, 3, 2, 2, 2, 8, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 8, 8,
                                                8, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 8, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 8, 8, 8, 9, 8, 2, 2, 8, 3, 3, 3, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2,
                                                2, 2, 8, 8, 8,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 2, 2, 2, 9, 2, 2, 2, 2,
                                                8, 8, 2, 3, 3, 3, 3, 8,
                                                3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 9, 9, 9, 8, 9, 2, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 8, 8,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 8, 2, 2, 2, 2,
                                                8, 8, 2, 3, 3, 3, 3, 3,
                                                3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 9, 8, 8, 8, 9, 2, 2, 8, 3, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 9, 8, 3,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 8, 9, 2, 2, 2,
                                                2, 2, 2, 2, 3, 3, 3, 3,
                                                3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 9, 9, 8, 9, 2, 8, 2, 2, 8, 3, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 0, 8, 3,
                                                8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 9, 9, 2, 2, 2,
                                                2, 2, 2, 2, 3, 3, 3, 3,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 9, 8, 9, 2, 9, 9, 2, 2, 8, 3, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 9, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 9, 8, 9, 2, 9, 9, 2, 2, 2, 8, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 9, 9, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 9, 8, 8, 9, 9, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 2, 2, 2, 2, 8, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 9, 9, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 8, 8, 8, 9, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 2, 2, 2, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                9, 3, 9, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 8, 2, 9, 2, 9, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                3, 3, 9, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 2, 2, 9, 2, 9, 9,
                                                9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 3, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 2, 2, 2, 2, 9,
                                                9, 9, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2,
                                                2, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 9,
                                                0, 9, 2, 2, 2, 2, 2, 2,
                                                2, 8, 2, 2, 9, 2, 2, 2, 2, 2, 8, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 2, 3, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 9,
                                                9, 8, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 9, 3, 3, 2, 2, 2, 2, 8, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 8, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9,
                                                8, 9, 2, 2, 2, 2, 2, 2,
                                                2, 8, 9, 9, 3, 9, 2, 2, 2, 2, 8, 2, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 8, 2, 2, 2, 2, 2, 9, 9, 9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9,
                                                8, 8, 9, 2, 2, 2, 2, 2,
                                                2, 8, 0, 9, 9, 2, 2, 2, 2, 2, 8, 8, 9, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 2, 3, 2, 8, 8, 2, 2, 2, 9, 9, 9, 9, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9,
                                                8, 8, 9, 2, 2, 2, 2, 2,
                                                8, 8, 2, 2, 2, 2, 2, 2, 3, 8, 8, 8, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 2, 9, 2, 8, 8, 8, 2, 2, 2, 9, 2, 2, 2, 3, 3, 3, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 9,
                                                9, 8, 8, 9, 2, 2, 2, 2,
                                                8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 8, 2, 2, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
                                                2, 2, 2, 3, 3,
                                                3, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 2, 9,
                                                8, 8, 8, 9, 8, 2, 2, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 8, 2, 9, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 4, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 3, 3, 3, 3, 3, 3, 2, 9,
                                                8, 8, 8, 8, 2, 3, 4, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 9, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
                                                2, 2, 8, 8, 8,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 3, 3, 2, 9,
                                                8, 2, 2, 8, 2, 3, 3, 8,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 9, 9, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 8, 8,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 2, 2, 8,
                                                2, 2, 2, 8, 8, 3, 3, 8,
                                                8, 8, 8, 3, 3, 3, 3, 3, 3, 2, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 9, 2, 9, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 8, 8,
                                                8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 3, 3, 3, 3, 2, 2, 2,
                                                2, 2, 2, 2, 8, 3, 3, 8,
                                                2, 8, 8, 3, 3, 3, 3, 3, 3, 2, 8, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 9, 9, 2, 2, 2, 9, 9, 9, 2, 2,
                                                2, 2, 8, 8, 8,
                                                8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 3, 3, 3, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 3, 8, 8,
                                                2, 8, 2, 3, 3, 3, 3, 3, 2, 4, 2, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 2, 9, 2, 9, 3, 3, 9, 9,
                                                9, 2, 2, 8, 8,
                                                9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 8, 3,
                                                2, 8, 2, 3, 3, 3, 3, 3, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 9, 3, 3, 3, 3, 3,
                                                3, 9, 9, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2,
                                                2, 3, 3, 3, 3, 3, 8, 3,
                                                2, 2, 3, 3, 3, 3, 3, 3, 9, 9, 9, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 9, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 3, 3, 8, 3, 2, 2, 3, 3, 3,
                                                3, 3, 3, 9, 9,
                                                9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 2,
                                                3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 2, 2, 9, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 8, 3, 2, 8, 2, 3, 3,
                                                3, 3, 3, 2, 2,
                                                9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 3, 3, 3, 3, 3, 3,
                                                2, 8, 3, 3, 3, 3, 3, 2,
                                                2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 9, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 8, 8, 2, 8, 2, 3, 3,
                                                3, 3, 3, 2, 4,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 6, 8, 2, 3, 3, 3, 3, 3, 2,
                                                8, 9, 9, 3, 3, 3, 3, 3,
                                                2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 9, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 8, 3, 3, 8, 2, 8, 8, 3, 3,
                                                3, 3, 3, 3, 2,
                                                8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 3, 3, 3, 3, 3, 2, 8,
                                                8, 9, 2, 2, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 2, 9, 3, 3, 3, 2, 2, 8, 2, 2, 2, 8, 8, 3, 3, 8, 8, 8, 8, 3, 3,
                                                3, 3, 3, 3, 2,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 3, 8, 8,
                                                8, 8, 2, 2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 2, 2, 9, 9, 9, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 9, 9, 3, 3, 3, 3, 2, 9, 8, 2, 2, 8, 2, 3, 3, 8, 8, 8, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 3, 3, 3, 2, 8, 8,
                                                8, 2, 2, 2, 2, 3, 3, 3,
                                                3, 3, 3, 3, 2, 2, 2, 9, 9, 9, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 2, 9, 3, 3, 3, 3, 3, 2, 9, 8, 8, 8, 8, 2, 3, 4, 2, 8, 8, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 9, 9, 2, 8,
                                                8, 2, 2, 2, 2, 2, 3, 3,
                                                3, 3, 3, 2, 2, 2, 2, 8, 9, 9, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3, 3, 3, 2, 9, 8, 8, 8, 9, 8, 2, 2, 2, 8, 8, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 9, 8,
                                                2, 2, 2, 2, 2, 2, 3, 3,
                                                2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 9, 8, 8, 9, 2, 2, 2, 2, 8, 8, 8, 3, 3,
                                                3, 3, 3, 3, 3,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 8,
                                                2, 2, 2, 2, 2, 2, 3, 8,
                                                2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 9, 2, 2, 2, 2, 2, 8, 8, 2, 2, 2,
                                                2, 2, 2, 3, 8,
                                                8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8,
                                                2, 2, 2, 2, 2, 2, 3, 8,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 9, 2, 2, 2, 2, 2, 2, 8, 0, 9, 9,
                                                2, 2, 2, 2, 2,
                                                8, 8, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8,
                                                8, 9, 2, 2, 2, 3, 3, 8,
                                                8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 8, 9, 2, 2, 2, 2, 2, 2, 2, 8, 9, 9, 3,
                                                9, 2, 2, 2, 2,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 8, 8,
                                                8, 9, 2, 2, 3, 3, 3, 8,
                                                8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 9, 8, 2, 2, 2, 2, 2, 2, 2, 8, 8, 9, 3,
                                                3, 2, 2, 2, 2,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 8, 8,
                                                9, 9, 2, 2, 3, 3, 2, 8,
                                                8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 0, 9, 2, 2, 2, 2, 2, 2, 2, 8, 2, 2, 9,
                                                2, 2, 2, 2, 2,
                                                8, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 2, 9, 8, 9,
                                                9, 2, 2, 2, 2, 8, 8, 8,
                                                8, 8, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 9, 9, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 9, 0,
                                                2, 2, 2, 2, 2, 8, 8, 8,
                                                8, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 3, 3, 9, 3, 9, 9, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 2, 2, 2, 9, 2,
                                                2, 2, 2, 2, 2, 2, 8, 8,
                                                8, 8, 8, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 8, 9, 8, 3, 9, 3, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 9, 2,
                                                2, 2, 2, 2, 2, 2, 2, 8,
                                                2, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 8, 8, 8, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2,
                                                2, 2, 2, 2, 8, 2, 9, 8,
                                                8, 8, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 9, 9, 8, 8, 9, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 9, 2, 2,
                                                2, 2, 8, 8, 9, 2, 9, 9,
                                                8, 8, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 9, 9, 9, 9, 9, 2, 2,
                                                2, 2, 2, 2, 9, 9, 8, 8,
                                                9, 9, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 9, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 4,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 9, 8, 8, 8, 9, 2, 2,
                                                2, 8, 8, 2, 8, 9, 8, 8,
                                                3, 9, 3, 2, 3, 3, 3, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 8, 8, 2, 2, 8, 9, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 8, 0, 9, 2, 2,
                                                2, 8, 8, 8, 8, 8, 8, 3,
                                                3, 3, 9, 2, 3, 3, 3, 2, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 8, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 8, 8, 9, 2, 2,
                                                8, 8, 8, 8, 8, 8, 8, 3,
                                                3, 3, 3, 9, 3, 3, 2, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 9, 2, 2, 2, 9, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 9, 9, 2, 2, 2,
                                                2, 8, 8, 8, 8, 8, 8, 3,
                                                3, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 8, 9, 9, 2, 2, 2,
                                                2, 8, 8, 8, 8, 8, 3, 3,
                                                3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 2, 2, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 9, 2, 2, 2, 2, 2,
                                                2, 2, 8, 8, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 2, 2, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 9, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 2, 2, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 3, 3,
                                                2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 9, 2, 2, 2, 2, 3, 3,
                                                3, 3, 2, 2, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 8, 8, 8, 8, 2, 2, 2, 8, 8, 2, 8, 2, 2, 2, 2,
                                                2, 9, 2, 2, 3,
                                                9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 3, 3, 3, 3,
                                                3, 3, 3, 3, 2, 2, 3, 3,
                                                3, 3, 3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 8, 9, 8, 8, 2, 2, 2, 8, 3, 2, 8, 2, 2, 2, 2,
                                                2, 9, 2, 2, 3,
                                                9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 8, 3, 3, 3, 3, 3, 3,
                                                3, 3, 2, 2, 2, 2, 3, 3,
                                                3, 3, 9, 0, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 9, 8, 8, 2, 2, 2, 8, 3, 3, 8, 2, 2, 2, 2,
                                                2, 2, 9, 2, 3,
                                                9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
                                                3, 2, 2, 2, 2, 2, 2, 3,
                                                3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 2, 9, 8, 8, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
                                                2, 2, 2, 2, 3,
                                                9, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 2, 2, 8, 8, 2, 4, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 2, 2, 2, 9, 8, 8, 8, 2, 2, 2, 3, 8, 2, 2, 2, 2, 2,
                                                2, 2, 9, 2, 3,
                                                3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                2, 2, 8, 8, 3, 8, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 8, 3, 3, 2, 4, 8, 8, 2, 2, 2, 2, 2,
                                                2, 2, 9, 2, 3,
                                                3, 9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 3, 2, 3, 3, 3, 3, 3, 3,
                                                2, 2, 8, 8, 3, 3, 8, 3,
                                                3, 3, 3, 3, 3, 3, 9, 8, 9, 8, 9, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 9, 8, 8, 3, 3, 3, 3, 3, 8, 2, 2, 2, 2, 2, 2,
                                                2, 2, 9, 9, 3,
                                                3, 9, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3,
                                                2, 8, 8, 8, 8, 3, 8, 2,
                                                3, 3, 3, 3, 3, 2, 9, 8, 8, 8, 8, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 3, 3, 2, 2, 2, 2, 2, 8, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 8, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 3, 3, 3,
                                                2, 8, 8, 8, 2, 3, 8, 2,
                                                3, 3, 3, 3, 2, 2, 8, 8, 8, 9, 8, 0, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 6, 9, 9, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 8, 2,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3,
                                                2, 2, 8, 8, 8, 8, 2, 2,
                                                3, 3, 3, 3, 2, 2, 8, 8, 8, 9, 8, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 9, 9, 9, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 3, 3, 3, 3, 3,
                                                2, 2, 2, 8, 8, 2, 2, 2,
                                                3, 3, 3, 3, 2, 2, 9, 8, 8, 8, 9, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 8, 8, 2, 2, 2,
                                                2, 3, 3, 8, 2, 2, 9, 8, 8, 8, 8, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 9, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 3, 8, 2, 2, 9, 8, 9, 9, 8, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 3, 8, 8,
                                                2, 2, 2, 2, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 8, 3, 8, 9, 8, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 3, 8, 2, 9, 8, 8, 8, 8, 2, 8, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 9, 3, 3, 3, 9, 3, 3, 3, 3, 3, 8, 8, 2,
                                                2, 2, 2, 2, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 8, 3, 3, 2, 9, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                2, 8, 8, 2, 2, 9, 8, 9, 9, 8, 9, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 9, 3, 3, 3, 9, 3, 3, 3, 3, 8, 8, 2, 2,
                                                2, 2, 2, 8, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 2, 9, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 2,
                                                8, 3, 8, 2, 2, 9, 2, 9, 9, 8, 8, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 3, 0, 3, 3, 3, 3, 8, 2, 2, 2,
                                                2, 2, 2, 8, 8,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 2, 2, 8,
                                                8, 3, 8, 2, 2, 2, 9, 2, 2, 9, 9, 9, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 8, 2, 2, 2, 3,
                                                2, 2, 2, 8, 8,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 3, 9, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 2, 8,
                                                3, 3, 8, 2, 2, 2, 2, 2, 2, 8, 8, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3,
                                                3, 2, 8, 8, 8,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 9, 3, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                8, 8, 2, 2, 2, 2, 2, 2, 2, 8, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 3,
                                                3, 8, 8, 8, 8,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 3, 3, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 9, 3, 3,
                                                3, 8, 3, 4, 9,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 9, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 9, 9, 9, 8, 9, 3,
                                                3, 8, 3, 3, 9,
                                                2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
                                                2, 3, 3, 9, 2, 3, 3, 3,
                                                2, 2, 2, 2, 2, 8, 8, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 9, 8, 9, 9, 8, 9, 3,
                                                3, 3, 3, 9, 9,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
                                                2, 3, 3, 2, 9, 2, 2, 3,
                                                3, 2, 2, 2, 2, 8, 3, 3, 9, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 2, 3, 3, 3, 2, 8, 8, 8, 2, 9, 3,
                                                3, 3, 3, 9, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
                                                2, 3, 3, 2, 9, 2, 2, 3,
                                                3, 2, 2, 2, 8, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 2, 2, 2, 2, 2, 2, 2, 2, 8, 2, 3, 3, 3, 8, 8, 8, 8, 9, 3, 3,
                                                3, 3, 3, 9, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
                                                2, 3, 3, 2, 2, 2, 9, 2,
                                                3, 2, 2, 2, 8, 3, 3, 3, 3, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 2, 2, 2, 2, 2, 2, 8, 8, 2, 3, 3, 3, 8, 8, 9, 9, 9, 3, 3,
                                                3, 3, 3, 3, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 3, 3, 3, 3, 2, 2, 2, 2, 2,
                                                2, 3, 3, 2, 2, 9, 0, 9,
                                                3, 2, 2, 2, 8, 2, 3, 3, 2, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 2, 2, 2, 2, 2, 2, 8, 8, 2, 3, 3, 2, 9, 8, 8, 9, 9, 3, 3,
                                                3, 9, 3, 8, 8,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2,
                                                3, 3, 3, 3, 2, 2, 2, 2,
                                                3, 3, 2, 8, 8, 4, 9, 9, 8, 8, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 9, 0, 8, 8, 2, 2, 2, 2, 8, 8, 8, 2, 3, 3, 2, 9, 9, 8, 9, 8, 9, 3,
                                                3, 9, 9, 8, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 8, 8, 8, 2, 9, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 2, 9, 8, 8, 2, 2, 2, 2, 8, 8, 8, 8, 3, 3, 8, 8, 9, 8, 9, 8, 9, 8,
                                                3, 3, 8, 8, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 8, 2, 2, 2, 2, 2,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 8, 8, 8, 9, 9, 8, 8, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 2, 8, 9, 8, 8, 2, 2, 2, 8, 8, 8, 8, 8, 3, 3, 8, 8, 8, 9, 9, 9, 8, 8,
                                                3, 9, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 8, 8, 8, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 9, 8, 8, 2, 2, 2, 2, 2, 8, 8, 8, 8, 3, 3, 2, 9, 8, 9, 8, 9, 9, 9,
                                                9, 9, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 8, 8, 8, 8, 8, 8, 2, 2, 2,
                                                2, 2, 2, 2, 9, 9, 3, 3,
                                                3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 8, 2, 2, 3, 2, 2, 2, 8, 8, 8, 3, 3, 3, 9, 9, 8, 8, 9, 9, 9,
                                                2, 2, 2, 2, 2,
                                                2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 8, 8, 8, 8, 8, 2, 2, 2, 2,
                                                2, 2, 2, 2, 2, 9, 3, 3,
                                                3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 8, 8, 8, 2, 2, 3, 3, 3, 3, 8, 8, 8, 8, 3, 3, 3, 8, 0, 8, 9, 2, 9, 3,
                                                3, 3, 2, 2, 2,
                                                2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 8, 8, 8, 2, 2, 2, 2, 9,
                                                9, 9, 2, 2, 2, 9, 9, 3,
                                                3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 8, 8, 2, 3, 3, 3, 3, 3, 3, 3, 8, 8, 3, 3, 3, 3, 9, 9, 3, 3, 3, 3,
                                                3, 3, 3, 2, 2,
                                                3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 9, 8, 8, 2, 2, 9, 9, 9, 9,
                                                3, 3, 9, 9, 2, 2, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 2, 9, 9, 3, 3, 3,
                                                3, 3, 9, 9, 3, 3, 2, 9,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
                                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3,
                                                3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 }
                };

                int[] elPersonaje = { 31, 33, ON_FOOT };

                inicializarMundo(ULTIMA);

                do {
                        actualizarTiempo();
                        imprimirMundo(ULTIMA, elPersonaje);
                        verAccion(elPersonaje, ULTIMA);
                } while (jugando);
        }

        private static void inicializarMundo(int[][] mundo) {

                viewPort = 10;
                alcanceVision = viewPort / 2;

                minFila = 0 + viewPort;
                minColumna = 0 + viewPort;
                maxFila = mundo.length - (viewPort + 1);
                maxColumna = mundo[0].length - (viewPort + 1);
        }

        static void actualizarTiempo() {

                hora = hora + 0.1;
                if (hora >= 24) {
                        hora = 0;
                }
                calculaAlcanceVision();
        }

        static void calculaAlcanceVision() {

                alcanceVision = viewPort * 2;

                if (hora < 1 || hora > 23) {
                        alcanceVision = 2;
                } else if (hora < 3 || hora > 21) {
                        alcanceVision = alcanceVision / 5;
                } else if (hora < 4 || hora > 20) {
                        alcanceVision = alcanceVision / 5 * 2;
                } else if (hora < 5 || hora > 19) {
                        alcanceVision = alcanceVision / 5 * 3;
                } else if (hora < 6 || hora > 18) {
                        alcanceVision = alcanceVision / 5 * 4;
                }
        }

        static void imprimirMundo(int[][] castillo, int[] personaje) {

                String elemento;
                limpiarPantalla();
                imprimirElCielo();
                for (int fila = personaje[FILA] - viewPort; fila <= personaje[FILA] + viewPort; fila++) {
                        for (int columna = personaje[COLUMNA] - viewPort; columna <= personaje[COLUMNA]
                                        + viewPort; columna++) {

                                elemento = mapear(personaje[2]==ON_FOOT?10:13, modoVisualizacion);
                                if (!(fila == personaje[FILA] && columna == personaje[COLUMNA])) {
                                        elemento = mapear(castillo[fila][columna], modoVisualizacion);
                                }

                                if (!(Math.pow((fila - personaje[FILA]), 2)
                                                + Math.pow((columna - personaje[COLUMNA]), 2) <= alcanceVision
                                                                * alcanceVision)) {
                                        elemento = mapear(14, modoVisualizacion);
                                }
                                System.out.print(elemento);
                        }
                        System.out.println();
                }
                imprimirStatus(personaje);
        }

        private static void imprimirStatus(int[] personaje) {

                imprimirLinea();
                System.out.print("HORA: [" + (int) hora + "] ");
                System.out.print("/ (" + personaje[FILA] + "," + personaje[COLUMNA] + ")");
                System.out.println(" / SKIN[" + modoVisualizacion + "]");
                imprimirLinea();
        }

        static void imprimirLinea() {

                System.out.println(mapear(15, modoVisualizacion).repeat(viewPort * 2 + 1));
        }

        static String mapear(int elemento, int modoVisualizacion) {

                switch (modoVisualizacion) {
                        case VISUALIZACION_NORMAL:
                                return mapearNormal(elemento);
                        case VISUALIZACION_SIN_COLOR:
                                return mapearSinColor(elemento);
                        case VISUALIZACION_RAW:
                                return mapearRaw(elemento);
                        case VISUALIZACION_COLISIONES:
                                return "" + tipoTerreno(elemento, 0);
                }
                return "";
        }

        // public static final int ID_CUEVA = 0;
        // public static final int ID_PARED = 1;
        // public static final int ID_CESPED = 2;
        // public static final int ID_AGUA = 3;
        // public static final int ID_CASTILLO = 4;
        // public static final int ID_CINCO = 5;
        // public static final int ID_CESPEDALTO = 6;
        // public static final int ID_SIETE = 7;
        // public static final int ID_ARBOL = 8;
        // public static final int ID_PICO = 9;

        private static String mapearRaw(int elemento) {

                return "" + elemento;

        }

        static String mapearSinColor(int elemento) {

                String misTiles[] = {
                                "(())",
                                "[##]",
                                "..:.",
                                " ~ ~",
                                "[==]",
                                "5555",
                                "oO*o",
                                "7777",
                                "%%%%",
                                "/\\^^",
                                "\\[]/",
                                " () ",
                                "    ",
                                "\\/\\/",
                                "    ",
                                "----"
                };
                return misTiles[elemento];
        }

        static String mapearNormal(int elemento) {

                String misTiles[] = {
                                BLACK_BACKGROUND_BRIGHT + "(())" + RESET,
                                WHITE + WHITE_BACKGROUND + "[##]" + RESET,
                                GREEN_BOLD + YELLOW_BACKGROUND + "..:." + RESET,
                                BLUE_BACKGROUND_BRIGHT + " ~ ~" + RESET,
                                WHITE + WHITE_BACKGROUND + "[==]" + RESET,
                                "5555" + RESET,
                                YELLOW_BRIGHT + GREEN_BACKGROUND + "oO*o" + RESET,
                                "7777" + RESET,
                                GREEN_BOLD + YELLOW_BACKGROUND + "%%%%" + RESET,
                                RED_UNDERLINED + YELLOW_BACKGROUND + "/\\^^" + RESET,
                                "\\[]/" + RESET,
                                YELLOW_BOLD_BRIGHT + BLUE_BACKGROUND + " () " + RESET + RESET,
                                BLUE_BACKGROUND + "    " + RESET + RESET,
                                "\\/\\/" + RESET,
                                "    " + RESET,
                                "----" + RESET
                };

                // tiles.put(" ", BLUE_BOLD_BRIGHT + BLUE_BACKGROUND_BRIGHT + " ~~ " + RESET);
                // tiles.put(".", YELLOW_BRIGHT + GREEN_BACKGROUND + " . ." + RESET);
                // tiles.put("-", WHITE + WHITE_BACKGROUND + "[##]" + RESET);
                // tiles.put("=", BLACK_BACKGROUND_BRIGHT + "||||" + RESET);
                // tiles.put("|", WHITE + WHITE_BACKGROUND + "[##]" + RESET);
                // tiles.put(":", );
                // tiles.put("+", GREEN_BOLD + YELLOW_BACKGROUND + "..:." + RESET);
                // tiles.put("O", WHITE_BACKGROUND_BRIGHT + "[ ]" + RESET);
                // tiles.put("#", BLACK + RED_BACKGROUND + "::::" + RESET);
                // tiles.put("*", YELLOW + YELLOW_BACKGROUND + " " + RESET);
                // tiles.put("$", RED_BRIGHT + YELLOW_BACKGROUND + "$$$$" + RESET);
                // tiles.put("X", RED_UNDERLINED + YELLOW_BACKGROUND + "||||" + RESET);
                // tiles.put("%", );
                // tiles.put("_", BLACK + "____" + RESET);
                // tiles.put("~", );
                // tiles.put("B", BLUE + BLUE_BACKGROUND + "====" + RESET);
                // tiles.put("P", RED + "_()_" + RESET);
                // tiles.put("D", BLACK_BACKGROUND_BRIGHT + " " + RESET);
                // tiles.put("S", YELLOW_BOLD_BRIGHT + BLUE_BACKGROUND + " () " + RESET);
                // tiles.put("C", BLUE_BACKGROUND + " " + RESET);

                return misTiles[elemento];
        }

        static int tipoTerreno(int elemento, int medioTransporte) {
                switch (medioTransporte) {
                        case ON_FOOT:
                                return elemento % 2;
                        case ON_SHIP:
                                return elemento == 3 ? 0 : 1;
                }
                return 0;
        }

        static void mover(int[] unPersonaje, int direccion, int[][] mapa) {

                int oldFila = unPersonaje[FILA];
                int oldColumna = unPersonaje[COLUMNA];

                unPersonaje[FILA] += MOVIMIENTO[direccion][FILA];
                unPersonaje[COLUMNA] += MOVIMIENTO[direccion][COLUMNA];

                if (tipoTerreno(mapa[unPersonaje[FILA]][unPersonaje[COLUMNA]], unPersonaje[2]) != 0) {
                        unPersonaje[FILA] = oldFila;
                        unPersonaje[COLUMNA] = oldColumna;
                }

                if (unPersonaje[FILA] < minFila) {
                        unPersonaje[FILA] = unPersonaje[FILA] + 1;
                }
                if (unPersonaje[FILA] > maxFila) {
                        unPersonaje[FILA] = unPersonaje[FILA] - 1;
                }
                if (unPersonaje[COLUMNA] < minColumna) {
                        unPersonaje[COLUMNA] = unPersonaje[COLUMNA] + 1;
                }
                if (unPersonaje[COLUMNA] > maxColumna) {
                        unPersonaje[COLUMNA] = unPersonaje[COLUMNA] - 1;
                }
        }

        static void verAccion(int[] elPersonaje, int[][] elMundo) {

                switch (capturarMovimiento()) {
                        case ARRIBA:
                                mover(elPersonaje, ARRIBA, elMundo);
                                break;
                        case ABAJO:
                                mover(elPersonaje, ABAJO, elMundo);
                                break;
                        case IZQUIERDA:
                                mover(elPersonaje, IZQUIERDA, elMundo);
                                break;
                        case DERECHA:
                                mover(elPersonaje, DERECHA, elMundo);
                                break;
                        case SALIR:
                                jugando = !jugando;
                                break;
                        case CAMBIA_VISUALIZACION:
                                cambiaVisualizacion();
                                break;
                        case CAMBIA_TRANSPORTE:
                                cambiaTransporte(elPersonaje);
                                break;
                        case NADA:
                                break;
                }
        }

        private static void cambiaTransporte(int[] elPersonaje) {
                elPersonaje[2] = elPersonaje[2]==ON_FOOT?ON_SHIP:ON_FOOT;
        }

        static void cambiaVisualizacion() {
                modoVisualizacion++;
                if (modoVisualizacion > 3) {
                        modoVisualizacion = 0;
                }
        }

        static int capturarMovimiento() {

                switch (pedirChar()) {
                        case 's', 'S', '8':
                                return ABAJO;
                        case 'w', 'W', '2':
                                return ARRIBA;
                        case 'a', 'A', '4':
                                return IZQUIERDA;
                        case 'd', 'D', '6':
                                return DERECHA;
                        case 'f', 'F':
                                return SALIR;
                        case 'v', 'V':
                                return CAMBIA_VISUALIZACION;
                        case 'q', 'Q':
                                return CAMBIA_TRANSPORTE;
                }
                return NADA;
        }

        static char pedirChar() {

                Scanner entrada = new Scanner(System.in);
                String inputUsuario = entrada.nextLine() + "x"; // Este es un caso que justifica un comentario!
                return inputUsuario.charAt(0); // Lo comentamos en clase ;)
        }

        static void limpiarPantalla() {

                System.out.print("\033[H\033[2J");
                System.out.flush();
        }

        static void imprimirElCielo() {

                imprimirLinea();
                for (int i = 0; i < viewPort * 2 + 1; i = i + 1) {
                        if ((hora > 6) && (hora <= 18)
                                        && (i == (int) (((viewPort * 2)) - ((hora - 7) * (viewPort * 2) / 12)))) {
                                System.out.print(mapear(11, modoVisualizacion));
                        } else {
                                System.out.print(mapear(12, modoVisualizacion));
                        }
                }
                System.out.println();
                imprimirLinea();
        }

        public static final String RESET = "\033[0m";

        public static final String BLACK = "\033[0;30m";
        public static final String RED = "\033[0;31m";
        public static final String GREEN = "\033[0;32m";
        public static final String YELLOW = "\033[0;33m";
        public static final String BLUE = "\033[0;34m";
        public static final String PURPLE = "\033[0;35m";
        public static final String CYAN = "\033[0;36m";
        public static final String WHITE = "\033[0;37m";

        public static final String BLACK_BOLD = "\033[1;30m";
        public static final String RED_BOLD = "\033[1;31m";
        public static final String GREEN_BOLD = "\033[1;32m";
        public static final String YELLOW_BOLD = "\033[1;33m";
        public static final String BLUE_BOLD = "\033[1;34m";
        public static final String PURPLE_BOLD = "\033[1;35m";
        public static final String CYAN_BOLD = "\033[1;36m";
        public static final String WHITE_BOLD = "\033[1;37m";

        public static final String BLACK_UNDERLINED = "\033[4;30m";
        public static final String RED_UNDERLINED = "\033[4;31m";
        public static final String GREEN_UNDERLINED = "\033[4;32m";
        public static final String YELLOW_UNDERLINED = "\033[4;33m";
        public static final String BLUE_UNDERLINED = "\033[4;34m";
        public static final String PURPLE_UNDERLINED = "\033[4;35m";
        public static final String CYAN_UNDERLINED = "\033[4;36m";
        public static final String WHITE_UNDERLINED = "\033[4;37m";

        public static final String BLACK_BACKGROUND = "\033[40m";
        public static final String RED_BACKGROUND = "\033[41m";
        public static final String GREEN_BACKGROUND = "\033[42m";
        public static final String YELLOW_BACKGROUND = "\033[43m";
        public static final String BLUE_BACKGROUND = "\033[44m";
        public static final String PURPLE_BACKGROUND = "\033[45m";
        public static final String CYAN_BACKGROUND = "\033[46m";
        public static final String WHITE_BACKGROUND = "\033[47m";

        public static final String BLACK_BRIGHT = "\033[0;90m";
        public static final String RED_BRIGHT = "\033[0;91m";
        public static final String GREEN_BRIGHT = "\033[0;92m";
        public static final String YELLOW_BRIGHT = "\033[0;93m";
        public static final String BLUE_BRIGHT = "\033[0;94m";
        public static final String PURPLE_BRIGHT = "\033[0;95m";
        public static final String CYAN_BRIGHT = "\033[0;96m";
        public static final String WHITE_BRIGHT = "\033[0;97m";

        public static final String BLACK_BOLD_BRIGHT = "\033[1;90m";
        public static final String RED_BOLD_BRIGHT = "\033[1;91m";
        public static final String GREEN_BOLD_BRIGHT = "\033[1;92m";
        public static final String YELLOW_BOLD_BRIGHT = "\033[1;93m";
        public static final String BLUE_BOLD_BRIGHT = "\033[1;94m";
        public static final String PURPLE_BOLD_BRIGHT = "\033[1;95m";
        public static final String CYAN_BOLD_BRIGHT = "\033[1;96m";
        public static final String WHITE_BOLD_BRIGHT = "\033[1;97m";

        public static final String BLACK_BACKGROUND_BRIGHT = "\033[0;100m";
        public static final String RED_BACKGROUND_BRIGHT = "\033[0;101m";
        public static final String GREEN_BACKGROUND_BRIGHT = "\033[0;102m";
        public static final String YELLOW_BACKGROUND_BRIGHT = "\033[0;103m";
        public static final String BLUE_BACKGROUND_BRIGHT = "\033[0;104m";
        public static final String PURPLE_BACKGROUND_BRIGHT = "\033[0;105m";
        public static final String CYAN_BACKGROUND_BRIGHT = "\033[0;106m";
        public static final String WHITE_BACKGROUND_BRIGHT = "\033[0;107m";
}